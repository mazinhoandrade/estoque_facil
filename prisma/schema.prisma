// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Product {
  id           String         @id @default(uuid())
  name         String
  code         String
  price        Float
  quantity     Int
  description  String?
  imageUrl     String?
  categoryId   String
  category     Category       @relation(fields: [categoryId], references: [id])
  orderProduct OrderProduct[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id           Int            @id @default(autoincrement())
  total        Float
  clientName   String
  orderProduct OrderProduct[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model OrderProduct {
  id         String   @id @default(uuid())
  quantity   Int
  price      Float
  clientName String
  productId  String
  orderId    Int
  order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
